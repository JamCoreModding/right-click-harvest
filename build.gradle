plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.9-SNAPSHOT" apply false
    id "me.shedaniel.unified-publishing" version "0.1.+" apply false
    id "com.github.breadmoirai.github-release" version "2.4.1"
    id "maven-publish"
}

if (System.getenv("GITHUB_TOKEN") != null) {
    githubRelease {
        token(System.getenv("GITHUB_TOKEN"))
        owner("JamCoreModding")
        repo("right-click-harvest")
        tagName("${project.version}")
        releaseName("V${project.version}")
        body(project.rootProject.file("CHANGELOG.md").text)
        draft(false)

        if (project.branch != null) {
            targetCommitish(project.branch)
        }
    }
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
        
        mixin {
            useLegacyMixinAp = false
        }
    }

    jar {
        manifest {
            attributes([
                    'Specification-Title'   : mod_name,
                    'Specification-Version' : project.jar.archiveVersion,
                    'Implementation-Title'  : project.name,
                    'Implementation-Version': project.jar.archiveVersion,
                    'Built-On-Java'         : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                    'Built-On-Minecraft'    : minecraft_version,
                    'JamLib-File-Name'        : "rightclickharvest-${project.base.archivesName.get()}-${rootProject.version}.jar"
            ])
        }
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings loom.officialMojangMappings()
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    version = rootProject.version
    group = rootProject.group

    base {
        archivesName = "rightclickharvest"
    }

    repositories {
        mavenCentral()

        maven {
            name = "Modrinth"
            url = "https://api.modrinth.com/maven"
        }

        maven {
            name = "Jamalam's Maven"
            url = "https://maven.jamalam.tech/releases"
        }

        maven {
            name = "ParchmentMC"
            url = "https://maven.parchmentmc.org"
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 21
    }

    tasks.create("prepareWorkspace") {}

    java {
        withSourcesJar()
    }

    tasks.publish {
        dependsOn("clean")
        dependsOn(":githubRelease")
        dependsOn("common:publishAllPublicationsToMavenRepository")
        dependsOn("fabric:publishUnified")
        dependsOn("fabric:publishAllPublicationsToMavenRepository")
        dependsOn("neoforge:publishUnified")
        dependsOn("neoforge:publishAllPublicationsToMavenRepository")
    }
}
